// Mocks generated by Mockito 5.4.4 from annotations
// in uah_shelters/test/mocks/fs_storage.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:io' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

import 'fs_storage.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FSStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFSStorage extends _i1.Mock implements _i2.FSStorage {
  @override
  _i3.Future<String> getFileURI(String? path) => (super.noSuchMethod(
        Invocation.method(
          #getFileURI,
          [path],
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #getFileURI,
            [path],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #getFileURI,
            [path],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<String> uploadFile(
    String? path,
    _i5.File? file,
    _i3.FutureOr<dynamic> Function()? action,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadFile,
          [
            path,
            file,
            action,
          ],
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #uploadFile,
            [
              path,
              file,
              action,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #uploadFile,
            [
              path,
              file,
              action,
            ],
          ),
        )),
      ) as _i3.Future<String>);
}
